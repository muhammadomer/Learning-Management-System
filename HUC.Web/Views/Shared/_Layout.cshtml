@using AtlasDB
@using HUC.Web.App.SEOPage
@using HUC.Web.App.Shared
@using HUC.Web.App.Users
@using HUC.Web.Controllers
@using HUC.Web.Models
@{
    var pageData = (PageDataModel)ViewBag.PageData;
    if (pageData == null)
    {
        pageData = new PageDataModel();
    }

    var curUrl = "";

    if (Request.Url != null)
    {
        curUrl = Request.Url.AbsolutePath.ToLower();
    }
    var atlas = new AtlasDatabase();

    var seoData = atlas.GetSingle<SEOPageModel>(curUrl, "URL");


    var user = (UserModel) ViewBag._ActiveUser;

    var isAdmin = user != null && user.HasRole("admin");
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, maximum-scale=1" />
    @if (seoData != null)
    {
        <title>Training Courses | @seoData.PageTitle</title>
        <meta name="description" content="@seoData.MetaDescription">
    }
    else
    {
        <title>Training Courses | @pageData.Title</title>
    }

    @Styles.Render("~/bundles/less")
    @Styles.Render("~/bundles/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/js")

    <link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
          rel="stylesheet" type="text/css" />
    <!--[if lte IE 8]>
        <link rel="stylesheet" type="text/css" href="/_Content/css/lib/ie8.css" />
    <![endif]-->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-52191700-1', 'headsupcompliance.co.uk');
        ga('send', 'pageview');

    </script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
</head>
<body>
    @if (isAdmin)
    {
        <div class="alert alert-bar" style="display: block;">
            <p>
                <span class="alert-title">Admin User</span>
                <span class="alert-message">You are logged in as an admin user</span>
            </p>
            <div class="buttons">
                <a href="@Url.Action("Index","Dashboard", new {Area = "Admin"})">
                    Go To Admin
                </a>
                @if (seoData!= null)
                {
                    <a href="@Url.Action("Edit","SEOPages",new {id = seoData.ID, Area = "Admin"})" class="btn-success">
                        Edit SEO Fields
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Create","SEOPages",new {URL = curUrl, Area = "Admin"})" class="btn-danger">
                        Set SEO Fields
                    </a>
                }
            </div>
        </div>
    }
    <div class="notification-bar" style="display: none;">
        <p class="notification-title">
            
        </p>
        <span class="notification-message">

        </span>
        <a href="#" class="notification-close">x</a>
    </div>
    <!-- HEADER -->
    @Html.Partial("~/Views/Shared/Partials/Header.cshtml")

    <!-- NAVIGATION BAR -->
    @Html.Partial("~/Views/Shared/Partials/Nav.cshtml", pageData)

    <!-- MAIN CONTENT -->
    <div id="main-content">
        @if (!String.IsNullOrWhiteSpace(pageData.ContentTitle) || pageData.Breadcrumb.Any())
        {
            <div id="title-bar">
                <div class="container">
                    <div class="content">
                        @if (!String.IsNullOrWhiteSpace(pageData.ContentTitle))
                        {
                            <h1>
                                @pageData.ContentTitle
                            </h1>
                        }

                        @if (pageData.Breadcrumb.Any())
                        {
                            @Breadcrumb(pageData)
                        }
                    </div>
                </div>
            </div>

            <div class="clear"></div>
        }

        @RenderBody()
        <div class="clear"></div>
    </div>

    <!-- FOOTER -->
    @Html.Action("Footer", "Site")
    <div class="clear"></div>
    @RenderSection("scripts", required: false)
    @{
        var notification = (NotificationModel)TempData[BaseController.NotificationKey];
        if (notification != null)
        {
            TempData[BaseController.NotificationKey] = null;

            <script type="text/javascript">
                @switch (notification.Type)
                {
                    case NoteType.Error:
                        @:addError('@notification.Message.ForNotification()', '@notification.Title.ForNotification()');
                                                                                                            break;
                    case NoteType.Info:
                        @:addInfo('@notification.Message.ForNotification()', '@notification.Title.ForNotification()');
                                                                                                            break;
                    case NoteType.Success:
                        @:addSuccess('@notification.Message.ForNotification()', '@notification.Title.ForNotification()');
                                                                                                            break;
                    case NoteType.Note:
                        @:addNotice('@notification.Message.ForNotification()', '@notification.Title.ForNotification()');
                                                                                                            break;
                }
            </script>
        }
    }
</body>
</html>

@helper Breadcrumb(PageDataModel pageData)
{
    var breadcrumb = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("home", "/")
    };

    if (pageData != null && pageData.Breadcrumb != null)
    {
        breadcrumb.AddRange(pageData.Breadcrumb);
    }

    <div class="breadcrumb">
        @{
            var count = breadcrumb.Count();
            foreach (var item in breadcrumb)
            {
                if (count == 1 || String.IsNullOrWhiteSpace(item.Link))
                {
                    <span>@item.Name</span>
                }
                else
                {
                    <a href="@item.Link">@item.Name</a>
                }
                if (count != 1)
                {
                    @:/
                }
                count--;
            }
        }
    </div>
}