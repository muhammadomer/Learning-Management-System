@using HUC.Web.App.Resources
@using HUC.Web.App.Users.Courses
@using HUC.Web.App.Resources.Chapters.Contents
@using HUC.Web.App.Resources.Questions.Answers
@using HUC.Web.Models
@model HUC.Web.App.Resources.ResourceModel
@{
    ViewBag.PageData = new PageDataModel
    {
        Title = "Module - " + Model.Sort + " " + Model.Name,
        ContentTitle = "",
        ActivePage = "courses",
        Breadcrumb = new List<BreadcrumbItem>
{
            new BreadcrumbItem("Courses", Url.Action("Index")),
            new BreadcrumbItem(Model.Name)
        }
    };
    List<TestQuestionAnswerModelForJson> answerList = new List<TestQuestionAnswerModelForJson>();
    int nextModuleId = Model.NextResource == null ? 0 : Model.NextResource.ID;
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Signika:100,200,300,400,500,600,700,800,900" media="all">

<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/accordion.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/interview.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/flip.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/radio.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/slider.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/player.css" rel="stylesheet" />
<link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/truefalse.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/scale/js/popper.min.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/scale/js/bootstrap.min.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/accordion.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/interview.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/flip.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/radio.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/slider.js"></script>
<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/truefalse.js"></script>

<script src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/js/lib/jquery.signalR-2.2.1.js"></script>
<script src="~/signalr/hubs"></script>

<link rel="stylesheet" type="text/css" href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/css/UserCourses.css" />
<input type="hidden" id="hdnModuleId" value="@Model.ID" />
<input type="hidden" id="hdnNextModuleId" value="@nextModuleId" />
<input type="hidden" id="hdnCourseId" value="@Model.Course.ID" />
<input type="hidden" id="hdnApplicatonPath" value="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)" />
<style>
	@@media only screen and (min-width: 768px){
		#btnLogout{
			display:none;
		}
	}
</style>
<div class="desktop-ver">
	<div class="row">
			<div class="col-md-12">
				<div class="course-header">
					<div>@Model.Course.Name</div>
				</div>
			</div>
		</div>
	</div>
    <div class="row">
        <div class="col-md-12 align-top-content" >
            <a class="btn btn-success  pull-left btn-orange-color" style="margin-left: 25px;" href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Dashboard">
                <i class="fa fa-arrow-left" style="margin-right:5px"></i> Dashboard
            </a>
        </div>
		<div class="col-md-6 align-top-content" >
            <a class="btn btn-success pull-right btn-orange-color" style="margin-right: 34px;" href="@Url.Action("Logout", "Auth", new { area = ""})">
                Logout <i class="fa fa-arrow-right" style="margin-left:5px"></i>
            </a>
        </div>
    </div>
</div>

<div class="mobile-ver middle-btn">
    <div class="row" style="margin-bottom: 10px;">
        <div class="col-md-12">
            <a class="btn btn-success pull-right" href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Dashboard">
                Back to Dashboard<i style="margin-left: 10px;" class="fa fa-arrow-right"></i>
            </a>
        </div>
    </div>
</div>
<div class="course-overview course-overview-top">
    <div class="col-md-12 main-panel no-padding">
        <div class="panel panel-default" style="box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.5);">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 ev-article">
                        <h4>Module @Model.Sort - @Model.Name</h4>
                        @if (!String.IsNullOrWhiteSpace(Model.TestIntroCopy))
                        {
                            <p><strong>Module Content:</strong> @Model.TestIntroCopy</p>
                        }
                        @if (@Model.TestCooldownHours != null && @Model.TestCooldownHours > 1)
                        {
                            <p class="margin-top-10"><strong>Expected time to completion:</strong> @Convert.ToInt32(Model.TestCooldownHours) - <span>@(Convert.ToInt32(Model.TestCooldownHours) + 5)</span> Minutes</p>
                        }
                        else
                        {
                            <p class="margin-top-10"><strong>Expected time to completion:</strong> 1-2 Minutes</p>
                        }

                        @if (Model.Questions != null)
                        {
                            if (Model.Questions.Count() == 1)
                            {
                                <p class="margin-top-10"><strong>Assessed by:</strong> @Model.Questions.Count() question</p>
                            }
                            else if (Model.Questions.Count() > 1)
                            {
                                <p class="margin-top-10"><strong>Assessed by:</strong> @Model.Questions.Count() questions</p>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="panel" style="box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.5);">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12 ev-article">
                        @foreach (var item in Model.Chapters.OrderBy(x => x.Sort))
                        {
                            <h3>@Model.Sort.ToString().@item.Sort: @item.Name</h3>
                            foreach (var content in item.Contents.OrderBy(x => x.Sort))
                            {
                                switch (content.ContentType)
                                {
                                    case ContentType.Text:
                                        <p>
                                            @Html.Raw(content.Value)
                                        </p>
                                        break;

                                    case ContentType.Audio:
                                        <audio src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Media/Uploads/@content.Value" preload="auto"></audio>
                                        break;
									case ContentType.PDF:
										<iframe src="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Media/Uploads/@content.Value" style="width:100%; height:500px;" frameborder="0"></iframe>
										break;
                                    case ContentType.VideoYoutube:
                                        <iframe width="560" height="315" src="//www.youtube.com/embed/@content.Value?controls=2&modestbranding=1&rel=0" frameborder="0" allowfullscreen></iframe>
                                        break;
                                    case ContentType.VideoVimeo:
                                        <iframe src="//player.vimeo.com/video/@content.Value?badge=0&byline=0&title=0" width="560" height="315" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
                                        break;
                                    case ContentType.VideoWistia:
                                        <iframe src="//fast.wistia.net/embed/iframe/@content.Value" allowtransparency="true" frameborder="0" scrolling="no" class="wistia_embed" name="wistia_embed" allowfullscreen mozallowfullscreen webkitallowfullscreen oallowfullscreen msallowfullscreen width="640" height="360"></iframe>
                                        break;
                                    case ContentType.Accordion:
                                        <div class="accordion-module" id="module-@content.ID"></div>
                                        <script>
												var jasonObj = {
													divId: "module-@content.ID",
													get accordion() {
														return @Html.Raw(content.Value);
													},
												};
												var accordion = new Accordion(jasonObj);
												accordion.initialize();
                                        </script>
                                        break;
                                    case ContentType.Flip:
                                        <div class="flip-module" id="module-@content.ID"></div>
                                        <script>
												var flipJson = @Html.Raw(content.Value);
												for (var i = 0; i < flipJson.length; i++) {
													flipJson[i].imagePath = flipJson[i].imagePath.replace("~/", "../../../");
												}
												var jasonObj = {
													divId: "module-@content.ID",
													flip: flipJson,
												};
												var flip = new Flip(jasonObj);
												flip.initialize();
                                        </script>
                                        break;
                                    case ContentType.Interview:
                                        <div class="interview-module" id="module-@content.ID"></div>
                                        <script>
												var jasonObj = {
													divId: "module-@content.ID",
													name: "@ViewBag.FullName",
													role: "Employee",
													place: "@ViewBag.CompanyName",
													dialogs:@Html.Raw(content.Value),
												};
												var interview = new Interview(jasonObj);
												interview.initialize();
                                        </script>
                                        break;
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Questions.Count() > 0)
        {
            <div class="panel" style="box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.5);">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12 ev-article">
						<h4>Module @Model.Sort - Assessment</h4>
                            @foreach (var question in Model.Questions.OrderBy(x => x.Sort))
                            {
                                answerList = new List<TestQuestionAnswerModelForJson>();
                                


                                if (question.QuestionType == 1 || question.QuestionType == null)
                                {
									
                                    var formId = "submitAnswer" + question.ID;
                                    using (Html.BeginForm(null, null, FormMethod.Post, new { @id = formId }))
                                    {
                                        <p>
                                            <label class="hidden">Flag Question For Later? @Html.CheckBox("flagged")</label>
                                        </p>
                                        <div class="radio-module" id="module-@question.ID"></div>
                                        <input type="hidden" name="course" id="hdnCourseId-@question.ID" value="@question.Resource.Course.ID" />
                                        <input type="hidden" name="question" id="hdnQuestionId-@question.ID" value="0" />
                                        <input type="hidden" name="answer" id="hdnAnswerId-@question.ID" value="0" />

                                        foreach (var curAnswer in question.Answers)
                                        {
                                            answerList.Add(new TestQuestionAnswerModelForJson
                                            {
                                                answerid = curAnswer.ID.ToString(),
                                                option = curAnswer.Answer.Replace("\n", "").Replace("\r", ""),
                                                type = curAnswer.IsCorrect == true ? "true" : "false",
                                                selected = curAnswer.ID == question.AnswerId.FirstOrDefault() ? "true" : "false"
                                            });
                                        }
                                        <script>
													// Radio
													var answers = JSON.parse('@Html.Raw(Json.Encode(answerList))');
													var jasonObj = {
														divId: "module-@question.ID",
														title: "Part @question.Sort: Multiple Choice",
														question:"@question.Question.Replace("\n", "").Replace("\r", "")",
														statement: "Select the answer you assess is correct.",
														attempts: @question.Attempts,
														get multi() {
															return @Html.Raw(Json.Encode(answerList))
														},
													};
													var radio = new Radio(jasonObj);
													radio.initialize();
                                        </script>
                                    }
                                }
                                else if (question.QuestionType == 2)
                                {
                                    var formId = "submitAnswer" + question.ID;
                                    using (Html.BeginForm(null, null, FormMethod.Post, new { @id = formId }))
                                    {
                                        <p>
                                            <label class="hidden">Flag Question For Later? @Html.CheckBox("flagged")</label>
                                        </p>
                                        <div class="radio-module" id="module-@question.ID"></div>
                                        <input type="hidden" name="course" id="hdnCourseId-@question.ID" value="@question.Resource.Course.ID" />
                                        <input type="hidden" name="question" id="hdnQuestionId-@question.ID" value="0" />
                                        <input type="hidden" name="answer" id="hdnAnswerId-@question.ID" value="0" />
                                        foreach (var curAnswer in question.Answers)
                                        {
                                            answerList.Add(new TestQuestionAnswerModelForJson
                                            {
                                                answerid = curAnswer.ID.ToString(),
                                                option = curAnswer.Answer.Replace("\n", "").Replace("\r", ""),
                                                type = curAnswer.IsCorrect == true ? "true" : "false",
                                                selected = question.AnswerId == null ? "false" : curAnswer.ID == question.AnswerId.FirstOrDefault() ? "true" : "false"
                                            });
                                        }
                                        <script>
													// Radio
													var answers = JSON.parse('@Html.Raw(Json.Encode(answerList))');
													var jasonObj = {
														divId: "module-@question.ID",
														title: "Part @question.Sort: Multiple Choice",
														question:"@question.Question.Replace("\n", "").Replace("\r", "")",
														statement: "Select the answer you assess is correct.",
														attempts: @question.Attempts,
														get multi() {
															return @Html.Raw(Json.Encode(answerList))
														},
													};
													var radio = new Radio(jasonObj);
													radio.initialize();
                                        </script>
                                    }
                                }
                                else if (question.QuestionType == 3)
                                {
								
                                    var formId = "submitAnswer" + question.ID;
                                    using (Html.BeginForm(null, null, FormMethod.Post, new { @id = formId }))
                                    {
                                        <p>
                                            <label class="hidden">Flag Question For Later? @Html.CheckBox("flagged")</label>
                                        </p>
                                        <div class="radio-module" id="module-@question.ID"></div>
                                        <input type="hidden" name="course" id="hdnCourseId-@question.ID" value="@question.Resource.Course.ID" />
                                        <input type="hidden" name="question" id="hdnQuestionId-@question.ID" value="0" />
                                        <input type="hidden" name="answer" id="hdnAnswerId-@question.ID" value="0" />
                                        foreach (var curAnswer in question.Answers)
                                        {										
                                            answerList.Add(new TestQuestionAnswerModelForJson
                                            {
                                                answerid = curAnswer.ID.ToString(),
                                                option = curAnswer.Answer.Replace("\n", "").Replace("\r", ""),
                                                type = curAnswer.IsCorrect == true ? "true" : "false",

                                            });
                                        }
                                        <script>
													// Slider
													var answers = JSON.parse('@Html.Raw(Json.Encode(answerList))');
													var jasonObj = {
														divId: "module-@question.ID",
														title: "Part @question.Sort: Slider",
														subHeading: "Move the slider position between 1 - " + answers.length + " and then press submit.&nbsp;",
														max: answers.length,
														selected: @question.AnswerOrder == 0? 0 : @question.AnswerOrder,
														selectedAnswer: @question.AnswerOrder,
														attempts:  @question.Attempts,
														question: "@question.Question.Replace("\n", "").Replace("\r", "")",
														get multi() {
															return @Html.Raw(Json.Encode(answerList))
														},
													};
													var slider = new Slider(jasonObj);
													slider.initialize();

                                        </script>
                                    }
                                }
                                else if (question.QuestionType == 4)
                                {
                                    <p>
                                        <label class="hidden">Flag Question For Later? @Html.CheckBox("flagged")</label>
                                    </p>
                                    <div class="truefalse-module" id="module-@question.ID"></div>
                                    <input type="hidden" name="course" id="hdnCourseId-@question.ID" value="@question.Resource.Course.ID" />
                                    <input type="hidden" name="question" id="hdnQuestionId-@question.ID" value="@question.ID" />
                                    <input type="hidden" name="answer" id="hdnAnswerId-@question.ID" value="0" />
                                    foreach (var curAnswer in question.Answers)
                                    {
                                        answerList.Add(new TestQuestionAnswerModelForJson
                                        {
                                            answerid = curAnswer.ID.ToString(),
                                            option = curAnswer.Answer.Replace("\n", "").Replace("\r", ""),
                                            type = curAnswer.IsCorrect == true ? "true" : "false",
                                            selected = question.AnswerId.Count() == 0 ? "" :
                                            question.AnswerId.Where(x => question.AnswerId.Contains(curAnswer.ID)).Count() > 0 ? "true" : "false",

                                        });
                                    }
                                    <script>
													// True False
													var answers = JSON.parse('@Html.Raw(Json.Encode(answerList))');
													var jasonObj = {
														divId: "module-@question.ID",
														title: "Part @question.Sort: True or False",
														statement:
															"Read the three statements below. Decide whether they are true or false and then drag them onto corresponding answer.",
														attempts: @question.Attempts,
														question:  @Html.Raw(Json.Encode(answerList)),
													};
													var trueFalse = new TrueFalse(jasonObj);
													trueFalse.initialize();
                                    </script>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }



        <div class="row" style="margin-left:0px;margin-right:0px;">
            <div class="col-md-12 module-tile" style="padding: 20px 15px 20px 15px; font-size: 15px;">
                <div class="row footer-tile footer-tile-detail">
                    @if (Model.PrevResource != null)
                    {
                        <div class="col-md-1">
                            <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/ModuleDetail/@Model.PrevResource.ID"><i class="fa fa-arrow-left pull-left"></i></a>
                        </div>
                        <div class="col-md-4">
                            <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/ModuleDetail/@Model.PrevResource.ID">Module <span>@(Model.Sort - 1)</span> - @Model.PrevResource.Name</a>
                        </div>
                    }

                    @if (Model.Sort == 1)
                    {
                        <div class="col-md-1">
                            <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/AboutCourse/@Model.Course.ID"><i class="fa fa-arrow-left pull-left"></i></a>
                        </div>
                        <div class="col-md-4">
                            <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/AboutCourse/@Model.Course.ID">About this course</a>
                        </div>
                    }

                    <div class="col-md-2 footer-current-page">
                        <div style="width: 50%; margin: auto; background-color: #EBECEE; border-radius: 5px;">
                            <span>@(Model.Sort + 1)</span> of <span>@Model.TotalResource</span>
                        </div>
                    </div>



                    @if (Model.NextResource != null)
                    {
                        //if (Model.ModuleCompleted)
                        if (true)
                        {
                            <div class="col-md-4">
                                <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/ModuleDetail/@Model.NextResource.ID">Module <span>@(Model.Sort + 1)</span> - @Model.NextResource.Name</a>
                            </div>
                            <div class="col-md-1">
                                <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/ModuleDetail/@Model.NextResource.ID"><i class="fa fa-arrow-right pull-right"></i></a>
                            </div>
                        }
                        @*else
                        {
                            <div class="col-md-4 disabled-link">
                                <a>Module <span>@(Model.Sort + 1)</span> - @Model.NextResource.Name</a>
                            </div>
                            <div class="col-md-1 disabled-link">
                                <a><i class="fa fa-arrow-right pull-right"></i></a>
                            </div>
                        }*@
                    }
                    else
                    {
                        //if (Model.ModuleCompleted)
                        if (true)
                        {
                            <div class="col-md-4">
                                <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/Assessment/@Model.Course.ID">Assessment</a>
                            </div>
                            <div class="col-md-1">
                                <a href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/Users/Courses/Assessment/@Model.Course.ID"><i class="fa fa-arrow-right pull-right"></i></a>
                            </div>
                        }
                        @*else
                        {
                            <div class="col-md-4 disabled-link">
                                <a>Assessment</a>
                            </div>
                            <div class="col-md-1 disabled-link">
                                <a><i class="fa fa-arrow-right pull-right"></i></a>
                            </div>
                        }*@
                    }

                </div>
            </div>
        </div>


    </div>
</div>

<input type="hidden" id="courseHeartbeat" value="true" />
<input type="hidden" id="cID" value="@Model.CourseID" />
<input type="hidden" id="isTest" value="true" />