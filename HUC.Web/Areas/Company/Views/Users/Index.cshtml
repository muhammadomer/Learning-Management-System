@using HUC.Web.App.Companies
@using HUC.Web.Models
@model HUC.Web.App.Companies.CompanyModel
@{
    ViewBag.PageData = new PageDataModel
    {
        Title = "Users",
        ContentTitle = "Users",
        ContentTitleDesc = "You currently have " + Model.UsersUsed + "/" + Model.UserLimit + " users in your company",
        ActivePage = "users",
        Breadcrumb = new List<BreadcrumbItem>
{
            new BreadcrumbItem("Users", null, "i-users3")
        }
    };
}

<style>
   /* .remobord {
        -webkit-box-shadow: unset !important;
        border: none !important;
    }

    #sortable_wrapper .row:last-child {
        background-color: #e8eaef !important;
        -webkit-box-shadow: unset !important;
        border: none !important;
    }

    .dataTables_wrapper select, .dataTables_wrapper input {
        font-size: 18px !important;
        height: 40px !important;
        padding: 5px 10px;
        border-radius: 3px;
        display: inline;
        color: #72bbb8 !important;
        border: 1px solid #72bbb8 !important;
    }

        .dataTables_wrapper select, .dataTables_wrapper input:focus {
            border: 1px solid #72bbb8 !important;
        }*/

    .dataTables_info, .dataTables_paginate {
        padding: 15px;
        color: #245c6f;
        padding-right: 0px !important;
        padding-left: 0px !important;
    }

    .dataTables_wrapper select, .dataTables_wrapper input {
        font-size: 18px !important;
        height: 40px !important;
        padding: 5px 10px;
        border-radius: 3px;
        display: inline;
        color: #72bbb8 !important;
        border: 1px solid #72bbb8 !important;
    }

        .dataTables_wrapper select, .dataTables_wrapper input:focus {
            border: 1px solid #72bbb8 !important;
        }

    .dataTables_wrapper label {
        font-size: 20px !important;
        color:white !important;
    }
    .dataTables_length, .dataTables_filter {
        padding-left:0px !important;
        padding-right:0px !important;
        /* padding: 15px; */
    }
</style>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#sortable').dataTable({
                "bProcessing": true,
                "sDom": "<'row'<'col-sm-6'l><'col-sm-6'f>r>t<'row'<'col-sm-6'i><'col-sm-6'p>>",
                "sPaginationType": "full_numbers",
                "aoColumns": [null, null, null, null, null, { "bSortable": false }],
                "iDisplayLength": 10,
                "oLanguage": { "Search": '<i class="icon-search"></i>' },
                "aaSorting": [[2, "asc"], [0, "asc"]]
            });
        });
        $('#sortable').addClass("panel panel-default");
    </script>
    <link href="@(HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : string.Empty)/_Content/Scale/js/datatables/datatables.css" rel="stylesheet" />
}
<p class="hidden">
    @if (Model.UsersAvailable > 0)
    {
        <a href="@Url.Action("Create")" class="btn btn-s-md btn-primary"><i class="fa fa-pencil"></i> Create New (@Model.UsersAvailable Remaining)</a>
    }
</p>


   
<div class="col-md-12">
    <section @*class="panel panel-default"*@>
        <div class="table-responsive">
            <table id="sortable" class="table table-striped m-b-none">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th class="hidden">Company</th>
                        <th class="hidden">Type</th>
                        <th width="400px">Email</th>
                        <th class="">Account Status</th>
                        <th width="200px" class="text-center">User Statistics</th>
                    </tr>
                </thead>
                <tbody>
                    @IterateCompanies(new[] { Model })
                </tbody>
            </table>
        </div>
    </section>
</div>

    @helper IterateCompanies(IEnumerable<CompanyModel> companies, List<string> companyStrings = null)
    {
foreach (var curCompany in companies)
{
    if (companyStrings == null)
    {
        companyStrings = new List<string>();
    }
    companyStrings.Add(curCompany.Name);

    //Iterate the users within, then iterate the sub-companies
    //foreach (var user in curCompany.AllUsers.OrderByDescending(x => x.IsAdmin).ThenByDescending(x => x.IsBackupAdmin))
    foreach (var user in curCompany.AllUsers.Where(x => !x.IsAdmin && !x.IsBackupAdmin && !x.User.IsDeleted ).OrderBy(x => x.User.FirstName))
    {
                <tr>
                    <td>
                        @user.User.FirstName @user.User.LastName
                    </td>
                    <td class="hidden">
                        @String.Join(" > ", companyStrings)
                    </td>
                    <td class="hidden">
                        @if (user.IsAdmin)
                        {
                            <span class="label bg-danger"><i class="fa fa-bolt"></i> Admin</span>
                        }
                        else if (user.IsBackupAdmin)
                        {
                            <span class="label bg-dark text-white"><i class="fa fa-bolt"></i> Backup Admin</span>
                            if (user.IsBackupAdminCourseUsable)
                            {
                                <span class="label bg-primary"><i class="fa fa-book"></i> Course Usable</span>
                            }
                        }
                        else
                        {
                            <span class="label bg-primary"><i class="fa fa-user"></i> User</span>
                        }
                    </td>
                    <td>@user.User.Email</td>
                    <td class="">
                        @if (curCompany.AllUsers.Where(x => x.ID == user.ID && x.User.Logins.Any()).Any())
                        {
                            <i class="fa fa-circle" style="color:#34e455"></i>
                            @:Activated
                        }
                        else
                        {
                            <i class="fa fa-circle" style="color:red"></i>
                            @:Pending Activation
                        }
                    </td>
                    <td class="text-center">
                        <a href="@Url.Action("Statistics", new {id = user.ID})"><i class="fa fa-bar-chart-o"></i></a>
                        @*<a href="@Url.Action("Edit", new {id = user.ID})" class="btn btn-xs btn-rounded btn-warning"><i class="fa fa-pencil"></i> Edit</a>
                            @if (!user.IsAdmin)
                            {
                                <a href="@Url.Action("Delete", new {id = user.ID})" class="btn btn-xs btn-rounded btn-danger"><i class="fa fa-times"></i> Delete</a>
                                if (!user.IsBackupAdmin)
                                {
                                    <a href="@Url.Action("SetBackup", new {id = user.ID})" class="btn btn-xs btn-rounded btn-dark"><i class="fa fa-bolt"></i> Set Backup Admin</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("RevokeBackup", new { id = user.ID })" class="btn btn-xs btn-rounded btn-dark"><i class="fa fa-bolt"></i> Revoke Backup Admin</a>
                                    if (!user.IsBackupAdminCourseUsable)
                                    {
                                        <a href="@Url.Action("SetCourseUsable", new { id = user.ID })" class="btn btn-xs btn-rounded btn-primary"><i class="fa fa-book"></i> Set Course Usable</a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("RevokeCourseUsable", new { id = user.ID })" class="btn btn-xs btn-rounded btn-primary"><i class="fa fa-book"></i> Revoke Course Usable</a>
                                    }
                                }
                            }*@
                    </td>
                </tr>
            }
            @:@IterateCompanies(curCompany.SubCompanies, companyStrings)
        }
    }
<script>
  $(document).ready(function () {
             $(".intro-text").removeClass("button-deactive");
        $(".btn-2").css("color", "#ffffff !important");
			});
</script>